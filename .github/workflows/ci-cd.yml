name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:

jobs:
  # === CI PHASE ===
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---- Backend: Laravel ----
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install Composer dependencies
        run: |
          cd backend
          composer install --no-interaction --prefer-dist --no-progress
          
      - name: Create env file
        run: |
          cd backend
          cp .env.example .env || echo "APP_ENV=testing" > .env

      - name: Generate app key
        run: |
          cd backend
          php artisan key:generate

      - name: Run Laravel tests
        run: |
          cd backend
          php artisan test

      # ---- Frontend: React ----
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'  # cache npm
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install Node dependencies
        run: |
          cd frontend
          npm ci

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

      - name: Build React app
        run: |
          cd frontend
          npm run build

  docker:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker images
        run: |
          docker compose build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push images
        run: docker compose push

  # === CD PHASE ===
  deploy-backend:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Trigger Render backend deploy
        run: |
          curl -X POST https://api.render.com/deploy/srv-d3qb56m3jp1c738g18a0?key=${{ secrets.RENDER_API_KEY }}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Trigger Render frontend deploy
        run: |
          echo "Deploying frontend to Render..."
          curl -X POST https://api.render.com/deploy/srv-d3qb7u3ipnbc73ae3nag?key=${{ secrets.RENDER_API_KEY }}

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "CI/CD result for ${{ github.repository }}"
          to: "yourmail@example.com"
          from: "GitHub Actions <${{ secrets.EMAIL_USER }}>"
          body: |
            ✅ Repository: ${{ github.repository }}
            🧑‍💻 Author: ${{ github.actor }}
            🔁 Commit: ${{ github.sha }}
            📦 Branch: ${{ github.ref }}
            🚀 Status: ${{ job.status }}
